// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: funapi/rpc/fun_dedicated_server_rpc_message.proto

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning(push)
#pragma warning(disable : 4530)	// warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4512)	// warning C4512: assignment operator could not be generated
#pragma warning(disable : 4244)	// warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)	// warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)	// warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)	// warning C4127: conditional expression is constant
#pragma warning(disable : 4100)	// warning C4100: 'op' : unreferenced formal parameter
#endif // _PS3
#endif // _MSC_VER

#ifndef PROTOBUF_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto__INCLUDED
#define PROTOBUF_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void FUNAPI_API protobuf_AddDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
void protobuf_AssignDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
void protobuf_ShutdownFile_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();

class FunDedicatedServerRpcMessage;
class FunDedicatedServerRpcInfoMessage;

// ===================================================================

class FUNAPI_API FunDedicatedServerRpcMessage : public ::google::protobuf::Message {
 public:
  FunDedicatedServerRpcMessage();
  virtual ~FunDedicatedServerRpcMessage();

  FunDedicatedServerRpcMessage(const FunDedicatedServerRpcMessage& from);

  inline FunDedicatedServerRpcMessage& operator=(const FunDedicatedServerRpcMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunDedicatedServerRpcMessage& default_instance();

  void Swap(FunDedicatedServerRpcMessage* other);

  // implements Message ----------------------------------------------

  FunDedicatedServerRpcMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunDedicatedServerRpcMessage& from);
  void MergeFrom(const FunDedicatedServerRpcMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes xid = 1;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXidFieldNumber = 1;
  inline const ::std::string& xid() const;
  inline void set_xid(const ::std::string& value);
  inline void set_xid(const char* value);
  inline void set_xid(const void* value, size_t size);
  inline ::std::string* mutable_xid();
  inline ::std::string* release_xid();
  inline void set_allocated_xid(::std::string* xid);

  // required string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(FunDedicatedServerRpcMessage)
  // @@protoc_insertion_point(class_scope:FunDedicatedServerRpcMessage)
 private:
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* xid_;
  ::std::string* type_;
  friend void FUNAPI_API protobuf_AddDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
  friend void protobuf_AssignDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static FunDedicatedServerRpcMessage* default_instance_;
};
// -------------------------------------------------------------------

class FUNAPI_API FunDedicatedServerRpcInfoMessage : public ::google::protobuf::Message {
 public:
  FunDedicatedServerRpcInfoMessage();
  virtual ~FunDedicatedServerRpcInfoMessage();

  FunDedicatedServerRpcInfoMessage(const FunDedicatedServerRpcInfoMessage& from);

  inline FunDedicatedServerRpcInfoMessage& operator=(const FunDedicatedServerRpcInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunDedicatedServerRpcInfoMessage& default_instance();

  void Swap(FunDedicatedServerRpcInfoMessage* other);

  // implements Message ----------------------------------------------

  FunDedicatedServerRpcInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunDedicatedServerRpcInfoMessage& from);
  void MergeFrom(const FunDedicatedServerRpcInfoMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:FunDedicatedServerRpcInfoMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void FUNAPI_API protobuf_AddDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
  friend void protobuf_AssignDesc_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static FunDedicatedServerRpcInfoMessage* default_instance_;
};
// ===================================================================

static const int kDsInfoFieldNumber = 8;
FUNAPI_API extern ::google::protobuf::internal::ExtensionIdentifier< ::FunDedicatedServerRpcMessage,
    ::google::protobuf::internal::MessageTypeTraits< ::FunDedicatedServerRpcInfoMessage >, 11, false >
  ds_info;

// ===================================================================

// FunDedicatedServerRpcMessage

// required bytes xid = 1;
inline bool FunDedicatedServerRpcMessage::has_xid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunDedicatedServerRpcMessage::set_has_xid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunDedicatedServerRpcMessage::clear_has_xid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunDedicatedServerRpcMessage::clear_xid() {
  if (xid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xid_->clear();
  }
  clear_has_xid();
}
inline const ::std::string& FunDedicatedServerRpcMessage::xid() const {
  // @@protoc_insertion_point(field_get:FunDedicatedServerRpcMessage.xid)
  return *xid_;
}
inline void FunDedicatedServerRpcMessage::set_xid(const ::std::string& value) {
  set_has_xid();
  if (xid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xid_ = new ::std::string;
  }
  xid_->assign(value);
  // @@protoc_insertion_point(field_set:FunDedicatedServerRpcMessage.xid)
}
inline void FunDedicatedServerRpcMessage::set_xid(const char* value) {
  set_has_xid();
  if (xid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xid_ = new ::std::string;
  }
  xid_->assign(value);
  // @@protoc_insertion_point(field_set_char:FunDedicatedServerRpcMessage.xid)
}
inline void FunDedicatedServerRpcMessage::set_xid(const void* value, size_t size) {
  set_has_xid();
  if (xid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xid_ = new ::std::string;
  }
  xid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FunDedicatedServerRpcMessage.xid)
}
inline ::std::string* FunDedicatedServerRpcMessage::mutable_xid() {
  set_has_xid();
  if (xid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FunDedicatedServerRpcMessage.xid)
  return xid_;
}
inline ::std::string* FunDedicatedServerRpcMessage::release_xid() {
  clear_has_xid();
  if (xid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = xid_;
    xid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FunDedicatedServerRpcMessage::set_allocated_xid(::std::string* xid) {
  if (xid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete xid_;
  }
  if (xid) {
    set_has_xid();
    xid_ = xid;
  } else {
    clear_has_xid();
    xid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FunDedicatedServerRpcMessage.xid)
}

// required string type = 2;
inline bool FunDedicatedServerRpcMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunDedicatedServerRpcMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunDedicatedServerRpcMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunDedicatedServerRpcMessage::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& FunDedicatedServerRpcMessage::type() const {
  // @@protoc_insertion_point(field_get:FunDedicatedServerRpcMessage.type)
  return *type_;
}
inline void FunDedicatedServerRpcMessage::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:FunDedicatedServerRpcMessage.type)
}
inline void FunDedicatedServerRpcMessage::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:FunDedicatedServerRpcMessage.type)
}
inline void FunDedicatedServerRpcMessage::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FunDedicatedServerRpcMessage.type)
}
inline ::std::string* FunDedicatedServerRpcMessage::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:FunDedicatedServerRpcMessage.type)
  return type_;
}
inline ::std::string* FunDedicatedServerRpcMessage::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FunDedicatedServerRpcMessage::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:FunDedicatedServerRpcMessage.type)
}

// -------------------------------------------------------------------

// FunDedicatedServerRpcInfoMessage


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_funapi_2frpc_2ffun_5fdedicated_5fserver_5frpc_5fmessage_2eproto__INCLUDED
